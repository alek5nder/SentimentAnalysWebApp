@model List<WebAppAI.Models.TextInputModel>

@using ProjektTI.Resources

@{
    ViewData["Title"] = @SharedLabels.PageTitle;
}

<div class="container py-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="display-6 fw-bold text-primary">@FormLabels.H1</h1>
        
        <a class="btn btn-secondary" href="@Url.Action("History", "History")">
            View History
        </a>
       
    </div>

    <form asp-action="Analyze" method="post" class="shadow-sm p-4 bg-white rounded border">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })

        <div id="messages-container">
            @for (int i = 0; i < Model.Count; i++)
            {
                <div class="message-input mb-4">
                    <label class="form-label">@FormLabels.MessageLabel</label>
                    <textarea class="form-control form-control-lg" rows="3" name="messages[@(i)].Message">@Model[i].Message</textarea>
                </div>
            }
        </div>

        <div class="d-flex gap-2 mt-3">
            <button type="button" class="btn btn-outline-secondary" onclick="addMessage()">
                <i class="fas fa-plus"></i> @FormLabels.AddMessage
            </button>
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-paper-plane"></i> @FormLabels.SubmitButton
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        let messageIndex = @Model.Count;

        function addMessage() {
            const container = document.getElementById('messages-container');
            const div = document.createElement('div');
            div.classList.add('message-input', 'mb-4');
            div.innerHTML = `
                        <label class="form-label" for="messages_${messageIndex}__Message">@FormLabels.MessageLabel</label>
                        <textarea class="form-control form-control-lg" rows="3" name="messages[${messageIndex}].Message"></textarea>`;
            container.appendChild(div);
            messageIndex++;
        }
    </script>
}
